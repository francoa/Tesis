#!/bin/bash

started="$(cat startedSimuList)"
if [ ! "$started" ]
then
	echo "Nothing found"
	exit 0;
fi

simupath="$(gawk -f AwkFiles/getPath simuList)"
if [ ! "$simupath" ] || [ ! -d "$simupath" ]
then
	echo "Wrong path, please check the simuList file"
	exit 1
fi

echo "PATH: $simupath"

list="$(cd "$simupath" && ls -l tmp.restart.*)"
lastRestartStep="$(echo "$list" | gawk -f AwkFiles/lastStep)"

if [ ! -f "${simupath}/tmp.restart.${lastRestartStep}" ]
then
	echo "Started but no restart.. same as if nothing was found"
	rm startedSimuList
	exit 0
fi

echo "LAST RESTART STEP: ${lastRestartStep}"

#--	FIND RESTART.INPUT FILE
input_restart_file="input.restart.in"
echo "RESTART FILE: $input_restart_file"
#--	VERIFY RESTART FILE
if [ ! -f "${simupath}/${input_restart_file}" ]
then
	echo "No input restart template found ! Ereasing the simulation..."
	exit 3
fi
#-- FIND INPUT FILE
input_prefix="$(gawk -f AwkFiles/getInputPrefix simuList)"
input_file="$(gawk -f AwkFiles/getInputFile simuList)"
initial_step="$(gawk -f AwkFiles/getInitialStep simuList)"
echo "INPUT FILE: $input_file"
echo "INITIAL STEP: $initial_step"
#--	VERIFY INPUT FILE
if [ ! -f "${simupath}/${input_file}.in" ]
then
	echo "No input file found in simuList! Ereasing the simulation..."
	exit 4
fi
#--	FIND OUTPUT FILE
output_file="$(gawk -f AwkFiles/getOutputFile simuList)"
echo "OUTPUT FILE: $output_file"
#	VERIFY OUTPUT FILE
if [ ! -f "${simupath}/${output_file}" ]
then
	echo "No output file found! Ereasing the simulation..."
	exit 5
fi

#	WITH INPUT FILE:
gawk -v m='all' -f AwkFiles/extractOps ${simupath}/${input_file}".in" > ops_tmp
#--	FIND N OF OPERATIONS
ops_N="$(gawk -v m='match_nops' -f AwkFiles/extractOps ops_tmp)"
#--	FIND NUMBER OF GENERAL THERMO LINES
thindex="$(gawk -v m='match_thindex' -f AwkFiles/extractOps ops_tmp)"
#--	FIND GENERAL THERMO INFO
gthermo="$(gawk "NR>1&&NR<(2+$thindex){print}" ops_tmp)"

echo "OPS N: $ops_N"
echo "THINDEX: $thindex"
echo -e "GLOBAL THERMO:\n$gthermo"

#--	FIND OPERATIONS 			#OP_X
#--	FIND RESTART STEP 			#ROP_X
#--	FIND DUMP INFO				#DOP_X
#--	FIND THERMO INFO			#THOP_X
#--	FIND TIMESTEP INFO			#TSOP_X
#--	FIND RUN STEPS				#RUNOP_X
#	TODO: CHANGE BEHAVIOUR, BETWEEN 2 FIXES, WRITE ALL COMMANDS ?
opindex[1]="$(gawk 'match($0,"#OP",str){print NR+1; exit}' ops_tmp)"
ops[1]="$(gawk "NR==${opindex[1]}{print}" ops_tmp)"
for (( i = 2; i <= ${ops_N}; i++ ))
do	
#--	SAVE OSP INDEXES ?
	opindex[$i]="$(gawk 'NR>'${opindex[$i-1]}'&&match($0,"#OP",str){print NR+1; exit}' ops_tmp)"
	ops[$i]="$(gawk "NR==${opindex[$i]}{print}" ops_tmp)"
	echo "OP: ${ops[$i-1]}"
	cmdlist[$i-1]="$(gawk "NR>${opindex[$i-1]}&&NR<${opindex[$i]}-1{print}" ops_tmp)"
	run[$i-1]="$(gawk 'NR>'${opindex[$i-1]}'&&NR<'${opindex[$i]}-1'&&match($0,"run[ ]+([0-9]+)",s){print s[1]}' ops_tmp)"
	echo -e "Cmd $i :\n${cmdlist[$i-1]}"
	echo "RUN: ${run[$i-1]}"
done
echo "OP: ${ops[$i-1]}"
opindex[$i]="$(gawk 'match($0,"#N_OPS",str){print NR+1; exit}' ops_tmp)"
run[$i-1]="$(gawk 'NR>'${opindex[$i-1]}'&&NR<'${opindex[$i]}-1'&&match($0,"run[ ]+([0-9]+)",s){print s[1]}' ops_tmp)"
cmdlist[$i-1]="$(gawk "NR>${opindex[$i-1]}&&NR<${opindex[$i]}-1{print}" ops_tmp)"
echo -e "Cmd $i :\n${cmdlist[$i-1]}"
echo "RUN: ${run[$i-1]}"

#	WITH THE TMP.RESTART.STEP INFO:
#--	MATCH THE LAST PARTIAL OPERATION PERFORMED COMPARING WITH RUN STEPS
laststep="$(cat ${simupath}/${output_file} | awk 'BEGIN{ go=0}go==1&&match($1,"[0-9]+",step){print $1}go==0&&match($1,"Step"){go=1}go==1&&match($1,"Loop"){go=0}' | gawk 'END{print}')"
echo "LAST SIMU STEP: $laststep"

tmprun=${initial_step}
for (( i = 1; i <= ${ops_N}; i++ ))
do	
	tmprun=$(( $tmprun + ${run[$i]} ))
	echo "$tmprun"
	
	if (( $tmprun > ${lastRestartStep} ))
	then
		if [ "${ops[$i]}" == "#" ]
		then
			j=1
			while [ "${ops[$i]}" == "#" ]
			do
				ops[$i]="${ops[$i-$j]}"
				j=$(( j + 1 ))
			done
		fi

		break
	fi
done

echo "LAST RUN (WHERE RESTART TOOK PLACE): ${ops[$i]}"
echo "LAST RUN STEP (WHERE RESTART TOOK PLACE): ${run[$i]}"

#	WITH RESTART.INPUT FILE:
#--	FIND LINE WITH READ_RESTART AND PUT TMP.RESTART.STEP
cat "${simupath}/${input_restart_file}" > "${simupath}/${input_prefix}.restart.${lastRestartStep}.in"
input_restart_file="${simupath}/${input_prefix}.restart.${lastRestartStep}.in"

sed -i {'s/\(read_restart[\t ]*\)\(.*\)/\1 tmp.restart.'"${lastRestartStep}"'/'} ${input_restart_file}
#--	PUT THE OPERATIONS NOT PERFORMED
echo "#THERMO_INFO" >> ${input_restart_file}
echo -e "${gthermo}" >> ${input_restart_file}
echo -e "#END_THERMO_INFO\n" >> ${input_restart_file}

for (( h = $i; h <= ${ops_N}; h++ ))
do
	echo -e "#OP\n${ops[$h]}\n${cmdlist[$h]}\n" >> ${input_restart_file}
done

#--	PUT THE STEPS LEFT TO COMPLETE THE LAST OPERATION
sed -i {'1,/\(run[\t ]*\)\(.*\)/s/\(run[\t ]*\)\(.*\)/\1 '"$(( ${tmprun} - ${lastRestartStep} ))"'/'} ${input_restart_file}

#	WITH SIMULIST FILE:
#--	FIND THE FIRST SIMULATION AND CHANGE THE INPUT AND OUTPUT
gawk -v s=${lastRestartStep} -f AwkFiles/cmdUpdateRestart simuList > simuList_TMP
rm startedSimuList
rm simuList
mv simuList_TMP simuList
rm ops_tmp

exit 6
